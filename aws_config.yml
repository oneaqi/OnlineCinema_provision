---
  - name: launching ec2 instance 
    hosts: localhost
    vars_files:
      - vars.yml

    tasks:
      - name: create security group
        ec2_group:
          name: ansible
          description: Rules Allowing Traffic on port 22 and 80
          region: '{{ region }}'
          aws_access_key: '{{ aws_access_key }}'
          aws_secret_key: '{{ aws_secret_key }}'
          rules:
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 8030
              to_port: 8030
              cidr_ip: 0.0.0.0/0 
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
      - name: launching ec2 instance
        ec2:
          key_name: '{{ key_name }}'
          region: '{{ region }}'
          instance_type: t2.micro
          image: ami-010fae13a16763bb4
          group: ansible
          vpc_subnet_id: '{{ vpc_subnet_id }}'
          assign_public_ip: yes
          wait: yes
          wait_timeout: 500
          count: 1
          monitoring: no
          aws_access_key: '{{ aws_access_key }}'
          aws_secret_key: '{{ aws_secret_key }}'
          instance_tags:
            Name: Test_ec2
            Env: Dev            
        register: ec2_test  

      - name: Add new instance to host group
        add_host: 
          hostname: "{{ item.public_ip }}"
          groupname: launched
        with_items: '{{ec2_test.instances}}'

      - name: Wait for SSH to come up
        wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=1000 state=started
        with_items: '{{ec2_test.instances}}'

  - name: Configure instance
    hosts: launched
    connection: ssh
    remote_user: ec2-user
    gather_facts: yes
    become: True
    become_user: root

    tasks:

     - name: Install java 8, javac and set JAVA_HOME
       command: "{{ item }}"
       with_items:
         - yum install -y java-1.8.0-openjdk.x86_64
         - /usr/sbin/alternatives --set java /usr/lib/jvm/jre-1.8.0-openjdk.x86_64/bin/java
         - yum install -y java-devel

     - name: Install  git
       yum: name=git state=present

     - name: Install  docker
       yum: name=docker state=latest

     - name: Install xmlstarlet
       yum: name=xmlstarlet state=latest
     
     - name: Enable docker
       service:
         name: docker
         enabled: yes

     - name: Install pip module
       yum: name=python-pip state=latest

     - name: Install Python docker module
       pip: name=docker state=present

     - name: Install boto3
       pip: name=boto3 state=present
     - name: Start docker service
       service:
         name: docker
         state: started

     - name: Change docker.sock ownership
       file:
         path: /var/run/docker.sock
         mode: '0777'

     - name: Upload Jmeter script to the docker host
       synchronize: src=/home/ansible_user/playbooks/cinema.jmx dest=/tmp

     - name: Pull image
       docker_image:
         name: yuqidockerid/cinema:latest

     - name: Running the container
       docker_container:
         name: mycinema
         image: yuqidockerid/cinema:latest
         state: started
         ports: "8030:8030"
